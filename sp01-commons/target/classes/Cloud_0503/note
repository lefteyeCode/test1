一.feign声明式客户端
      声明远程调用接口不用写远程调用的代码
	（1）整合ribbon+hystrix
	（2）只需要定义一个远程调用接口，不需要写远程调用代码
  1.feign案例
      1>新建sp09-feign项目
      2>添加依赖和工具项目jar包
      3>修改yml配置
      4>主启动类添加@EnableDiscoveryClient和@EnableFeignClients
      5>编写接口，接口类使用@FeignClient注解，注解属性name值指定要访问的服务名
      	可以获得服务的主机地址
      	使用@GetMapping注解描述方法补全剩下的地址，方法中使用@PathVariable把路径中占位符替换为具体参数
      	!!!:总之就是借助SpringMVC的注解拼接路径
      5>编写Controller，接受请求，远程调用服务
      6>启动服务，访问并测试
  2.feign+ribbon负载均衡和重试，无需额外配置，feign默认启用，可以通过配置修改参数
  	ribbon.xxx 全局配置
	item-service.ribbon.xxx 对特定服务实例的配置
  3.feign+hystrix降级
          实现远程调用的接口，在子类中添加降级代码
  	  1>yml文件中启用hystrix
  	  	feign: hystrix: enabled: true	
  	  2>由于接口中不能编写降级方法（具体代码），所以写一个降级类，该类实现接口，在实现类中编写降级方法
  	          降级类使用@Component描述交给Spring容器
  	  3>接口类上的@FeignClient注解增加fallback属性，值为降级类
  	  	eg:@FeignClient(name = "item-service",fallback = ItemFeignServiceFB.class)
  	  eg:(sp09-feign)
  4.feign+hystrix熔断
  	整合熔断需要完整的hystrix和actuator依赖，主启动类添加@EnableCircuitBreaker并且博爱路hystrix.stream监控端点	  


二.OrderService修改
      远程调用其他服务执行业务
	1.添加feign、htstrix、actuator依赖
	2.修改yml配置文件，配置feign、hystrix
	3.主启动类添加@SpringCloudApplication    
	4.服务接口添加@FeignClient注解，注解属性name为服务名称，fallback为降级类.class  
    5.编写降级类实现接口，使用@Component描述交给Spring管理，类中编写降级方法
  	6.在业务类中自动装填，调用远程服务完成本业务
  	eg:(day03图:order service 调用商品库存服务和用户服务.png)
  	

三.turbine
      聚合监控，从多态服务器获取监控数据，把数据聚合后交给仪表盘显示 
   hystrix dashboard 一次只能监控一个服务实例，使用 turbine 可以汇集监控信息，将聚合后的信息提供给 hystrix dashboard 来集中展示和监控
   turbine不适用actuator暴露监控端点，它暴露的监控端点是/turbine.stream
   yml配置中编写turbine: app-config: feign,order-service//要聚合的有hystrix的服务名
	1.集群聚合监控项目搭建
		1>创建sp10-turbine项目
		2>修改yml配置
			turbine:
			 app-config: feign,order-service//聚合的服务名  
			 culster-name-expression: new String("default")//起集群名  
		3>主启动类添加@EnableTurbine注解
		4>访问测试
		     访问仪表盘http://localhost:4001/hystrix
		     监控turbine聚合的项目http://localhost:5001/turbine.stream
		eg:(day03图:hystrix + turbine 集群聚合监控.png)
		   (sp04-orderservice)

		     
   	  